
var is_blocked = 0; //this is used to prevent several blocks

jQuery(document).ready(function($){

    var updater = 0; //update interval/timer - used to interrupt scheduled update

    function assign_events() {

        /*ASSIGN CHANGE OF THE QUANTITIES IN THE MINI-CART*/

        //MINUS-PLUS ARE DISABLED SINCE 1.0.7

        // $('li.mini_cart_item div.quantity button.minus').off().on('click', function (e) {
        //     var min = Number($(this).parent().find('input[name=quantity]').attr('min'));
        //     var val = Number($(this).parent().find('input[name=quantity]').val());
        //     var initial_val = val;
        //     if (min) {
        //         if (val > min) val--;
        //         else {
        //             $(this).parents('.mini_cart_item').find('.quantity-warning.min').fadeIn('', function () {
        //                 $(this).delay(3000).fadeOut();
        //             });
        //             $(this).attr('disabled', true);
        //         }
        //     } else val--;
        //     if (val !== initial_val) {
        //         clearTimeout(updater);
        //         updater = setTimeout(ajax_update, 1000);
        //     }
        //     $(this).parent().find('.plus').attr('disabled', false);
        //     $(this).parent().find('input[name=quantity]').val(val);
        // });

        // $('li.mini_cart_item div.quantity button.plus').off().on('click', function (e) {
        //     var max = Number($(this).parent().find('input[name=quantity]').attr('max'));
        //     var val = Number($(this).parent().find('input[name=quantity]').val());
        //     var initial_val = val;
        //     if (max) {
        //         if (val < max) val++;
        //         else {
        //             $(this).parents('.mini_cart_item').find('.quantity-warning.max').fadeIn('', function () {
        //                 $(this).delay(3000).fadeOut();
        //             });
        //             $(this).attr('disabled', true);
        //         }
        //     } else val++;
        //     if (val !== initial_val) {
        //         clearTimeout(updater);
        //         updater = setTimeout(ajax_update, 1000);
        //     }
        //     $(this).parent().find('.minus').attr('disabled', false);
        //     $(this).parent().find('input[name=quantity]').val(val);
        // });

        $('li.mini_cart_item div.quantity input[name=quantity]').off().on('keyup', function () {
            var val = Number($(this).val());
            var max = Number($(this).parent().find('input[name=quantity]').attr('max'));
            var min = Number($(this).parent().find('input[name=quantity]').attr('min'));
            if (!val) val = 1;
            else {
                if (max && val > max) val = max;
                if (min && val < min) val = min;
            }
            // $(this).parent().find('.minus').attr('disabled', (val === min));
            // $(this).parent().find('.plus').attr('disabled', (val === max));
            $(this).val(val);
        }).on('change', function () {
            clearTimeout(updater);
            updater = setTimeout(ajax_update, 1000);
        });

        //----------------------------------------------------------------------------------------------------------

        /*ASSIGN REMOVE EVENT IN THE MINI-CART*/

        $('.mini_cart_item .remove').off().on('click', function (e) {
            blockCheckout();
            var cart_item = $(this).attr('cart_item');
            $.ajax({
                url: wtc_ajax_checkout.ajaxurl,
                data: {'action': 'wtc_ajax', 'do': 'remove', 'nonce': wtc_ajax_checkout.nonce, 'item': cart_item},
                type: 'post',
                success: function (data) {
                    if (data.indexOf('CART_EMPTY') > 0) window.location = wtc_ajax_checkout.shop_location;
                    else if (!(data.indexOf('ERROR') > 0)) {

                        $('.wtc-mini-cart').html(data);

                        //suspend Klarna
                        if (typeof window._klarnaCheckout == 'function') {
                            window._klarnaCheckout(function (api) {
                                api.suspend();
                            });
                        }

                        $.ajax(
                            wtc_ajax_checkout.ajaxurl,
                            {
                                type: 'POST',
                                dataType: 'json',
                                data: {
                                    action: 'klarna_checkout_cart_callback_remove',
                                    cart_item_key: cart_item,
                                    nonce: wtc_ajax_checkout.klarna_nonce
                                },
                                complete: function () {

                                    $('.wtc-checkout-cart-wrapper .left-col .cart').html(data);
                                    unblockCheckout(0);
                                    assign_events();

                                    //resume Klarna
                                    if (typeof window._klarnaCheckout == 'function') {
                                        window._klarnaCheckout(function (api) {
                                            api.resume();
                                        });
                                    }

                                }
                            }
                        );
                    }
                    else
                        console.log(data);
                },
                error: function (a, b, error) {
                    $('.ajax-update').fadeOut();
                    console.log(error);
                }
            });
            return false;
        });

        //----------------------------------------------------------------------------------------------------------

        /*DIFFERENT SHIPPING ADDRESS*/

        if($('div.checkout-area #ship-to-different-address-checkbox').length)
            $('div.checkout-area #ship-to-different-address-checkbox').off().on('change', function (e) {
                if ($(this).attr('checked')) {
                    $('div.checkout-area div.shipping_address').fadeIn();
                    $('.woocommerce-billing-fields #billing_postcode').off();
                    $('.shipping_address #shipping_postcode').off().on('change', function (e) {
                        wetailShipping.regular_check($(this).val()); //budbee check
                    }).trigger('change');
                } else {
                    $('div.checkout-area div.shipping_address').fadeOut();
                    $('.shipping_address #shipping_postcode').off();
                    $('.woocommerce-billing-fields #billing_postcode').off().on('change', function (e) {
                        wetailShipping.regular_check($(this).val()); //budbee check
                    }).trigger('change');
                }
            }).trigger('change');


        //----------------------------------------------------------------------------------------------------------

        /*COUPON ROUTINE*/

        $('.cart-discount').off().on('DOMSubtreeModified', function (e) {
            if ('undefined' !== typeof $('.cart-discount .woocommerce-message').html()) {
                clearTimeout(updater);
                updater = setTimeout(ajax_update, 500);
            }
        });


        $('.cart-discount .woocommerce-remove-coupon').off().on('click', function (e) {
            clearTimeout(updater);
            updater = setTimeout(ajax_update, 500);
        });

        //----------------------------------------------------------------------------------------------------------

        /*SHIPPING SELECTOR*/

        $('.shipping-selector input.shipping_method').off().on('change', function (e) {
            $(this).parents('ul').find('li').removeClass('selected');
            $(this).parents('li').addClass('selected');
            ajax_update({'shipping': $(this).val(), 'payment': 'default'});
            $('.shipping-delivery-times').hide();
            $('.shipping-delivery-dates').hide();
            $(this).parents('li').find('.shipping-delivery-times').show().find('select').trigger('change');
            $(this).parents('li').find('.shipping-delivery-dates').show().find('select').trigger('change');
        });


        //----------------------------------------------------------------------------------------------------------

        /*DELIVERY TIME AND DATE*/

        $('.delivery-time-selector').off().on('change', function (e) {
            if (!$(this).is(':visible')) return;
            blockCheckout();
            $.ajax({
                url: wtc_ajax_checkout.ajaxurl,
                data: {
                    'action': 'wtc_ajax',
                    'do': 'delivery_time',
                    'nonce': wtc_ajax_checkout.nonce,
                    'delivery_time': $(this).val(),
                    'delivery_id': $(this).attr('method_id')
                },
                type: 'post',
                complete: function (data) {
                    unblockCheckout(0);
                }
            });
        }).trigger('change');

        $('.delivery-date-selector').off().on('change', function (e) {
            if (!$(this).is(':visible')) return;
            blockCheckout();
            $.ajax({
                url: wtc_ajax_checkout.ajaxurl,
                data: {
                    'action': 'wtc_ajax',
                    'do': 'delivery_time',
                    'nonce': wtc_ajax_checkout.nonce,
                    'delivery_date': $(this).val(),
                    'delivery_id': $(this).attr('method_id')
                },
                type: 'post',
                complete: function (data) {
                    unblockCheckout(0);
                }
            });
        }).trigger('change');

        //----------------------------------------------------------------------------------------------------------

        /*PAYMENT GATEWAY SELECTOR*/

        $('.payment-selector input[name=wtc_payment_method]').off().on('change', function (e) {
            ajax_update({'shipping': 'default', 'payment': $(this).val()});
        });


        //----------------------------------------------------------------------------------------------------------

        /*CHANGE SHIPPING SELECTORS TO WORK SEPARATELY FROM STANDARD SELECTORS*/

        $('.shipping-selector label').each(function () {
            $(this).attr('for', 'wtc_' + $(this).attr('for'));
        });

        $('.shipping-selector input').each(function () {
            $(this).attr('id', 'wtc_' + $(this).attr('id'));
        });

        //----------------------------------------------------------------------------------------------------------


    }


    assign_events();

    /**
     * Ajax checkout updater
     */

    function ajax_update( params ){
        if(!params)
            params = {'shipping':'default','payment':'default'};
        blockCheckout();
        var quantities = [];
        $('.woocommerce-mini-cart input[name=quantity]').each(function(e){
            quantities.push({'cart_item_id':$(this).attr('cart_item_id'),'quantity':$(this).val()});
        });
        $.ajax({
            url: wtc_ajax_checkout.ajaxurl,
            data: { 'action'    : 'wtc_ajax',
                    'do'        : 'update',
                    'nonce'     : wtc_ajax_checkout.nonce,
                    'quantities': quantities,
                    'shipping'  : params.shipping,
                    'payment'   : params.payment
            },
            type: 'post',
            success: function(data){

                var rez = $.parseJSON(data);

                if(!rez.error){

                    if(rez.checkout) {
                        $('.wtc-checkout-cart-wrapper .right-col .checkout-area').html(rez.checkout);
                        $('#payment_method_' + rez.gateway).trigger('click');
                    }

                    if(rez.shipping!=='default')
                        $('.wtc-checkout-cart-wrapper .right-col .shipping-selector').html(rez.shipping);

                    $('.wtc-checkout-cart-wrapper .left-col .cart').html(rez.cart);

                    if('default' !== params.shipping) {
                        var shipping_method = params.shipping.replace(':','');
                        $('#shipping_method_0_' + shipping_method).trigger('click');
                    }


                    $('.wtc-checkout-cart-wrapper .right-col .payment-selector').html(rez.gateways);

                    if('klarna_checkout' === rez.gateway) {

                        //suspend Klarna
                        if (typeof window._klarnaCheckout == 'function') {

                            /*Budbee assign*/
                            $(window._klarnaCheckout).ready( function(){ wetailShipping.init(); } );

                            window._klarnaCheckout(function (api) {
                                api.suspend();
                            });
                        }

                        $.ajax(
                            wtc_ajax_checkout.ajaxurl,
                            {
                                type: 'POST',
                                dataType: 'json',
                                data: {
                                    action: 'klarna_checkout_cart_callback_update',
                                    cart_item_key: quantities[0].cart_item_id,
                                    new_quantity: quantities[0].quantity,
                                    nonce: wtc_ajax_checkout.klarna_nonce
                                },
                                complete: function () {

                                    unblockCheckout(0);
                                    assign_events();

                                    //resume Klarna
                                    if (typeof window._klarnaCheckout == 'function') {
                                        window._klarnaCheckout(function (api) {
                                                api.resume();
                                        });
                                    }

                                }
                            }
                        );

                    } else {
                        unblockCheckout(0);
                        assign_events();
                    }
                }
                else
                    console.log( rez.error );
            },
            error: function( a, b, error ){
                $('.ajax-update').fadeOut();
                console.log( error );
            }
        });
    }

    function blockCheckout(){
        $('.wtc-checkout-cart-wrapper').block({
            message: "",
            overlayCSS: {
                background: '#fff',
                opacity: 0.6
            }
        });
        is_blocked++;
    }

    function unblockCheckout(do_not_erase_coupon_msg) {
        //check if there are wc_errors - we redirect to cart
        if('undefined' !== typeof $('.wtc-mini-cart #wc_errors_found').val())
            return window.location = wtc_ajax_checkout.cart_url;
        //unblocking only if all blocking calls are over
        if(--is_blocked<0) is_blocked = 0;
        if(is_blocked) return;
        $('.wtc-checkout-cart-wrapper').unblock();
        if(!do_not_erase_coupon_msg)
            $('div.cart-discount .woocommerce-message').fadeOut('400', function(){
                $(this).remove(); clearTimeout(updater);
            });
    }
	
	
    //check if there is no any ajax running and unblock the cart
    $( document ).ajaxStop(function() {
        unblockCheckout(1);
    });
    
    //Validate if the is value in checkout input fields
    //stackoverflow.com/questions/42512010/jquery-if-input-text-has-value-add-class-to-label-remove-it-if-no-value
    function checkForInput(element) {
        // element is passed to the function ^
  
        const $label = $(element).parent('p.form-row');

        if ($(element).val().length > 0) {
            $label.addClass('input-has-value');
        } else {
            $label.removeClass('input-has-value');
        }
    }

    // The lines below are executed on page load
    $('input').each(function() {
        checkForInput(this);
    });

    // The lines below (inside) are executed on change & keyup
    //Added by @anton: Detect touch events
    function addInputEvents() {
        $('input').on('change keyup touchend', function() {
            checkForInput(this);  
        });
    }

    //Listen to all AJAX requests and add input events when executed
    $(document).ajaxSuccess(function() {
        addInputEvents();
    });
    
    //Run first time page loads
    addInputEvents();
});